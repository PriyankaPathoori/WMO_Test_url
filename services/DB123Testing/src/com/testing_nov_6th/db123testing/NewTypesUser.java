/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing_nov_6th.db123testing;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Time;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * NewTypesUser generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`NewTypes_User`")
public class NewTypesUser implements Serializable {

    private Integer id;
    private Byte byteCol;
    private Short shortCol;
    private BigDecimal doubleCol;
    private Long longCol;
    private BigInteger bigIntCol;
    private BigDecimal bigDecCol;
    private Double floatCol;
    private String stringCol;
    private String charCol;
    private String textCol;
    private String clobCol;
    private Date dateCol;
    private Time timeCol;
    @Type(type = "DateTime")
    private LocalDateTime timestampCol;
    private Boolean booleanCol;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] blobCol;
    @Type(type = "DateTime")
    private LocalDateTime datetimeCol;

    @Id
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`Byte Col`", nullable = true, scale = 0, precision = 2)
    public Byte getByteCol() {
        return this.byteCol;
    }

    public void setByteCol(Byte byteCol) {
        this.byteCol = byteCol;
    }

    @Column(name = "`Short Col`", nullable = true, scale = 0, precision = 5)
    public Short getShortCol() {
        return this.shortCol;
    }

    public void setShortCol(Short shortCol) {
        this.shortCol = shortCol;
    }

    @Column(name = "`Double Col`", nullable = true, scale = 8, precision = 18)
    public BigDecimal getDoubleCol() {
        return this.doubleCol;
    }

    public void setDoubleCol(BigDecimal doubleCol) {
        this.doubleCol = doubleCol;
    }

    @Column(name = "`Long Col`", nullable = true, scale = 0, precision = 18)
    public Long getLongCol() {
        return this.longCol;
    }

    public void setLongCol(Long longCol) {
        this.longCol = longCol;
    }

    @Column(name = "`BigInt Col`", nullable = true, scale = 0, precision = 35)
    public BigInteger getBigIntCol() {
        return this.bigIntCol;
    }

    public void setBigIntCol(BigInteger bigIntCol) {
        this.bigIntCol = bigIntCol;
    }

    @Column(name = "`BigDec Col`", nullable = true, scale = 15, precision = 35)
    public BigDecimal getBigDecCol() {
        return this.bigDecCol;
    }

    public void setBigDecCol(BigDecimal bigDecCol) {
        this.bigDecCol = bigDecCol;
    }

    @Column(name = "`Float Col`", nullable = true, scale = 4, precision = 8)
    public Double getFloatCol() {
        return this.floatCol;
    }

    public void setFloatCol(Double floatCol) {
        this.floatCol = floatCol;
    }

    @Column(name = "`String Col`", nullable = true, length = 255)
    public String getStringCol() {
        return this.stringCol;
    }

    public void setStringCol(String stringCol) {
        this.stringCol = stringCol;
    }

    @Column(name = "`Char Col`", nullable = true, length = 1)
    public String getCharCol() {
        return this.charCol;
    }

    public void setCharCol(String charCol) {
        this.charCol = charCol;
    }

    @Column(name = "`Text Col`", nullable = true, length = 2147483647)
    public String getTextCol() {
        return this.textCol;
    }

    public void setTextCol(String textCol) {
        this.textCol = textCol;
    }

    @Column(name = "`Clob Col`", nullable = true, length = 2147483647)
    public String getClobCol() {
        return this.clobCol;
    }

    public void setClobCol(String clobCol) {
        this.clobCol = clobCol;
    }

    @Column(name = "`Date Col`", nullable = true)
    public Date getDateCol() {
        return this.dateCol;
    }

    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    @Column(name = "`Time Col`", nullable = true)
    public Time getTimeCol() {
        return this.timeCol;
    }

    public void setTimeCol(Time timeCol) {
        this.timeCol = timeCol;
    }

    @Column(name = "`Timestamp Col`", nullable = true)
    public LocalDateTime getTimestampCol() {
        return this.timestampCol;
    }

    public void setTimestampCol(LocalDateTime timestampCol) {
        this.timestampCol = timestampCol;
    }

    @Column(name = "`Boolean Col`", nullable = true)
    public Boolean getBooleanCol() {
        return this.booleanCol;
    }

    public void setBooleanCol(Boolean booleanCol) {
        this.booleanCol = booleanCol;
    }

    @Column(name = "`Blob Col`", nullable = true)
    public byte[] getBlobCol() {
        return this.blobCol;
    }

    public void setBlobCol(byte[] blobCol) {
        this.blobCol = blobCol;
    }

    @Column(name = "`Datetime Col`", nullable = true)
    public LocalDateTime getDatetimeCol() {
        return this.datetimeCol;
    }

    public void setDatetimeCol(LocalDateTime datetimeCol) {
        this.datetimeCol = datetimeCol;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof NewTypesUser)) return false;
        final NewTypesUser newTypesUser = (NewTypesUser) o;
        return Objects.equals(getId(), newTypesUser.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}

